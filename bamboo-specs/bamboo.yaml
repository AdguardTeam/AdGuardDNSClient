---
'version': 2
'plan':
    'project-key': 'GO'
    'key': 'DNSCLIENT'
    'name': 'AdGuardDNSClient'
'variables':
    'dockerFpm': 'alanfranz/fpm-within-docker:ubuntu-bionic'
    'dockerGo': 'adguard/go-builder:1.22.5--1'
    'dockerMisc': 'adguard/go-misc-tools:1.0'
    'maintainer': 'Adguard DNS Team'
    'name': 'AdGuardDNSClient'
    'channel': 'development'

'stages':
-
    'Go Lint':
        'manual': false
        'final': false
        'jobs':
        - 'Go Lint'
-
    'Misc Lint':
        'manual': false
        'final': false
        'jobs':
        - 'Misc Lint'
-
    'Test':
        'manual': false
        'final': false
        'jobs':
        - 'Test'
-
    'Artifact':
        'manual': false
        'final': false
        'jobs':
        - 'ArtifactQA'
        - 'Artifact'
-
    'Publish':
        'manual': false
        'final': false
        'jobs':
        - 'Publish'

'Go Lint':
    'docker':
        'image': '${bamboo.dockerGo}'
        'volumes':
            '${system.GO_CACHE_DIR}': '${bamboo.cacheGo}'
            '${system.GO_PKG_CACHE_DIR}': '${bamboo.cacheGoPkg}'
    'key': 'LINT'
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
    -
        'checkout':
            'force-clean-build': true
    -
        'script':
            'interpreter': 'SHELL'
            'scripts':
            - |-
              #!/bin/sh

              set -e -f -u -x

              make VERBOSE=1 GOMAXPROCS=1 go-tools go-lint

'Misc Lint':
    'docker':
        'image': '${bamboo.dockerMisc}'
    'key': 'MISCLINT'
    'other':
        'clean-working-dir': true
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
      - 'checkout':
            'force-clean-build': true
      - 'script':
            'interpreter': 'SHELL'
            'scripts':
              - |
                set -e -f -u -x

                make VERBOSE=1 md-lint sh-lint

'Test':
    'docker':
        'image': '${bamboo.dockerGo}'
        'volumes':
            '${system.GO_CACHE_DIR}': '${bamboo.cacheGo}'
            '${system.GO_PKG_CACHE_DIR}': '${bamboo.cacheGoPkg}'
    'key': 'TEST'
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
    -
        'checkout':
            'force-clean-build': true
    -
        'script':
            'interpreter': 'SHELL'
            'scripts':
            - |-
              #!/bin/sh

              set -e -f -u -x

              make VERBOSE=1 go-deps go-test

'Artifact':
    'artifacts':
    -
        'name': 'AdGuardDNSClient_darwin_amd64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_darwin_amd64.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_darwin_arm64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_darwin_arm64.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_linux_386'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_linux_386.tar.gz'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_linux_amd64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_linux_amd64.tar.gz'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_linux_arm64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_linux_arm64.tar.gz'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_386'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_386.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_386_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_386.msi'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_amd64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_amd64.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_amd64_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_amd64.msi'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_arm64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_arm64.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_arm64_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_arm64.msi'
        'shared': true
        'required': true
    -
        'name': 'Checksums'
        'pattern': '${bamboo.name}/dist/checksums.txt'
        'shared': true
        'required': true
    -
        'name': 'Version'
        'pattern': '${bamboo.name}/dist/version.txt'
        'shared': true
        'required': true
    'docker':
        'image': '${bamboo.dockerGo}'
        'volumes':
            '${system.GO_CACHE_DIR}': '${bamboo.cacheGo}'
            '${system.GO_PKG_CACHE_DIR}': '${bamboo.cacheGoPkg}'
    'key': 'ART'
    'other':
         'clean-working-dir': true
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
    -
        'checkout':
            'repository': 'bamboo-deploy-publisher'
            # The paths are always relative to the working directory.
            'path': 'bamboo-deploy-publisher'
            'force-clean-build': true
    -
        'checkout':
            'path': '${bamboo.name}'
            'force-clean-build': true
    -
        'script':
            'interpreter': 'SHELL'
            'scripts':
            - |-
              #!/bin/sh

              set -e -f -u -x

              # Follow the working repository path.
              cd "${bamboo.name}"

              # Explicitly checkout the revision that we need.
              git checkout "${bamboo.repository.revision.number}"

              # TODO(e.burkov):  Consider using more POSIX-compliant printf.
              echo "${bamboo.gpgSecretKeyPart1}${bamboo.gpgSecretKeyPart2}"\
                  | awk '{ gsub(/\\n/, "\n"); print; }'\
                  | gpg --import --batch --yes

              make\
                  CHANNEL=${bamboo.channel}\
                  GPG_KEY_PASSPHRASE=${bamboo.gpgPassword}\
                  DEPLOY_SCRIPT_PATH="../bamboo-deploy-publisher/deploy.sh"\
                  SIGNER_API_KEY="${bamboo.adguardDnsClientWinSignerSecretApiKey}"\
                  PARALLELISM=1\
                  VERBOSE=2\
                  build-release

'ArtifactQA':
    'artifacts':
    -
        'name': 'AdGuardDNSClient_darwin_amd64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_darwin_amd64.zip'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_linux_amd64'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_linux_amd64.tar.gz'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_386_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_386.msi'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_amd64_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_amd64.msi'
        'shared': true
        'required': true
    -
        'name': 'AdGuardDNSClient_windows_arm64_msi'
        'pattern': '${bamboo.name}/dist/AdGuardDNSClient_windows_arm64.msi'
        'shared': true
        'required': true
    -
        'name': 'Checksums'
        'pattern': '${bamboo.name}/dist/checksums.txt'
        'shared': true
        'required': true
    'docker':
        'image': '${bamboo.dockerGo}'
        'volumes':
            '${system.GO_CACHE_DIR}': '${bamboo.cacheGo}'
            '${system.GO_PKG_CACHE_DIR}': '${bamboo.cacheGoPkg}'
    'key': 'ARTQA'
    'other':
         'clean-working-dir': true
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
    -
        'checkout':
            'repository': 'bamboo-deploy-publisher'
            # The paths are always relative to the working directory.
            'path': 'bamboo-deploy-publisher'
            'force-clean-build': true
    -
        'checkout':
            'path': '${bamboo.name}'
            'force-clean-build': true
    -
        'script':
            'interpreter': 'SHELL'
            'scripts':
            - |-
              #!/bin/sh

              set -e -f -u -x

              # Follow the working repository path.
              cd "${bamboo.name}"

              # Explicitly checkout the revision that we need.
              git checkout "${bamboo.repository.revision.number}"

              # TODO(e.burkov):  Consider using more POSIX-compliant printf.
              echo "${bamboo.gpgSecretKeyPart1}${bamboo.gpgSecretKeyPart2}"\
                  | awk '{ gsub(/\\n/, "\n"); print; }'\
                  | gpg --import --batch --yes

              make\
                  ARCH="amd64"\
                  OS="darwin linux"\
                  CHANNEL=${bamboo.channel}\
                  GPG_KEY_PASSPHRASE=${bamboo.gpgPassword}\
                  DEPLOY_SCRIPT_PATH="../bamboo-deploy-publisher/deploy.sh"\
                  SIGNER_API_KEY="${bamboo.adguardDnsClientWinSignerSecretApiKey}"\
                  PARALLELISM=1\
                  VERBOSE=2\
                  build-release

              # Build Windows separately to build MSI installers for all
              # supported architectures.
              make\
                  OS="windows"\
                  CHANNEL=${bamboo.channel}\
                  GPG_KEY_PASSPHRASE=${bamboo.gpgPassword}\
                  DEPLOY_SCRIPT_PATH="../bamboo-deploy-publisher/deploy.sh"\
                  SIGNER_API_KEY="${bamboo.adguardDnsClientWinSignerSecretApiKey}"\
                  PARALLELISM=1\
                  VERBOSE=2\
                  build-release

'Publish':
    'artifact-subscriptions':
    - 'artifact': 'AdGuardDNSClient_darwin_amd64'
    - 'artifact': 'AdGuardDNSClient_darwin_arm64'
    - 'artifact': 'AdGuardDNSClient_linux_386'
    - 'artifact': 'AdGuardDNSClient_linux_amd64'
    - 'artifact': 'AdGuardDNSClient_linux_arm64'
    - 'artifact': 'AdGuardDNSClient_windows_386'
    - 'artifact': 'AdGuardDNSClient_windows_386_msi'
    - 'artifact': 'AdGuardDNSClient_windows_amd64'
    - 'artifact': 'AdGuardDNSClient_windows_amd64_msi'
    - 'artifact': 'AdGuardDNSClient_windows_arm64'
    - 'artifact': 'AdGuardDNSClient_windows_arm64_msi'
    - 'artifact': 'Checksums'
    - 'artifact': 'Version'
    'final-tasks':
    - 'clean'
    'key': 'PGH'
    'other':
        'clean-working-dir': true
    'requirements':
    - 'adg-docker': 'true'
    'tasks':
    - 'clean'
    - 'checkout':
          'repository': 'bamboo-deploy-publisher'
          'path': 'bamboo-deploy-publisher'
          'force-clean-build': true
    - 'script':
            'interpreter': 'SHELL'
            'scripts':
              - |
                #!/bin/sh

                set -e -f -u -x

                cd "${bamboo.name}/dist/"

                env\
                    GITHUB_TOKEN="${bamboo.githubPublicRepoPassword}"\
                    ../../bamboo-deploy-publisher/deploy.sh\
                    adguarddns-client-github

# TODO(e.burkov):  Limit repositories when the Bamboo version will support such
# configuration for triggers via YAML specs.
#
# See https://docs.atlassian.com/bamboo-specs-docs/8.2.0/specs.html?yaml#triggering-selected-repositories.
'branches':
    'create': 'for-pull-request'
    'delete':
        'after-deleted-days': 1
        'after-inactive-days': 5
    'link-to-jira': true

'branch-overrides':
-
    # rc-vX.Y.Z branches are the release candidate branches. They are created
    # from the release branch and are used to build the release candidate
    # images.  The "candidate" pseudo-channel is used to generate version.
    '^rc-v[0-9]+\.[0-9]+\.[0-9]+':
        'variables':
            'dockerGo': 'adguard/go-builder:1.22.5-1'
            'dockerMisc': 'adguard/go-misc-tools:1.0'
            'channel': 'candidate'
        'stages':
        - 'Go Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Go Lint'
        - 'Misc Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Misc Lint'
        - 'Test':
            'manual': false
            'final': false
            'jobs':
            - 'Test'
        - 'Artifact':
            'manual': false
            'final': false
            'jobs':
            - 'ArtifactQA'
-
    # release-vX.Y.Z branches are the branches from which the actual final
    # release is built.
    '^release-v[0-9]+\.[0-9]+\.[0-9]+':
        # Build final releases on release branches manually.
        'triggers': []
        # Set the default release channel on the final branch to release, as
        # these are the ones that actually get released.
        'variables':
            'dockerGo': 'adguard/go-builder:1.22.5--1'
            'dockerMisc': 'adguard/go-misc-tools:1.0'
            'channel': 'release'
        'stages':
        - 'Go Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Go Lint'
        - 'Misc Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Misc Lint'
        - 'Test':
            'manual': false
            'final': false
            'jobs':
            - 'Test'
        - 'Artifact':
            'manual': false
            'final': false
            'jobs':
            - 'Artifact'
        - 'Publish':
            'manual': false
            'final': false
            'jobs':
            - 'Publish'
-
    # All the other branches, including master.
    '^.*':
        'stages':
        - 'Go Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Go Lint'
        - 'Misc Lint':
            'manual': false
            'final': false
            'jobs':
            - 'Misc Lint'
        - 'Test':
            'manual': false
            'final': false
            'jobs':
            - 'Test'
        - 'Artifact':
            'manual': false
            'final': false
            'jobs':
            - 'ArtifactQA'
        # Don't publish artifacts for other branches.

'notifications':
-
    'events':
    - 'plan-status-changed'
    'recipients':
    -
        'webhook':
            'name': 'Build webhook'
            'url': 'http://prod.jirahub.service.eu.consul/v1/webhook/bamboo?channel=adguard-qa-dns-builds'

'labels': []

'other':
    'concurrent-build-plugin': 'system-default'
