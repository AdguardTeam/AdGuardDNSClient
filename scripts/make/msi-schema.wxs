<?xml version="1.0" encoding="UTF-8"?>
<!--
  Format XML documents with:
    xmllint -pretty 2
-->
<!--
  Use 1033, the code for U.S. English, see
  https://learn.microsoft.com/en-us/openspecs/office_standards/ms-oe376/6c085406-a698-4e12-9d4d-c3b0ee3dbc4a.
-->
<?define
LanguageCode="1033" ?>
<!--
  Product information.

  NOTE: Don't change the following codes since those must be consistent among
  different versions, see
  https://documentation.help/Windows-Installer/windows_installer_best_practices.htm.
-->
<?define
UpgradeCode="{40391C3E-440C-4792-A62F-5E3F93FE7C3C}" ?>
<?define
ExecutableGUID="{788DF3FB-2EC9-48FD-9F69-D6385B319BCA}" ?>
<!--
  Use astrisk for automatic PackageCode picking, see
  https://documentation.help/Windows-Installer/windows_installer_best_practices.htm.
-->
<?define
PackageCode="*" ?>
<?if
$(var.Platform) = x64 ?>
<!--
  Use {941C5942-5C4F-4FEC-86DF-B2FAD4AB5448} for versions <= 0.1.0 (x64)
-->
<?define
ProductCode="{941C5942-5C4F-4FEC-86DF-B2FAD4AB5448}" ?>
<?define
PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
<?define
ComponentWin64="yes" ?>
<?else
?>
<!--
  Use {1B0E61B1-58F9-42F7-86A7-7F7CF5104C0F} for versions <= 0.1.0 (x86)
-->
<?define
ProductCode="{1B0E61B1-58F9-42F7-86A7-7F7CF5104C0F}" ?>
<?define
PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
<?define
ComponentWin64="no" ?>
<?endif
?>
<!--
  Define some human-readable information about the product.
-->
<?define
ProductName="AdGuard DNS Client" ?>
<?define
Manufacturer="Adguard Software Limited" ?>
<?define
InstallerDescription="AdGuard DNS Client Installer" ?>
<!--
  The top-level container element, see
  https://wixtoolset.org/docs/v3/xsd/wix/wix.

  TODO(e.burkov): Add xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui"
-->
<Wix
    xmlns="http://wixtoolset.org/schemas/v4/wxs"
  >
  <!--
    Describe a Product, since this is an MSI distribution, see
    https://wixtoolset.org/docs/v3/xsd/wix/product.

    TODO(e.burkov):  Add Platform attribute when
    https://gitlab.gnome.org/GNOME/msitools/-/issues/46 is resolved.
  -->
  <Product
      Id="$(var.ProductCode)"
      UpgradeCode="$(var.UpgradeCode)"
      Name="$(var.ProductName)"
      Version="$(var.ProductVersion)"
      Manufacturer="$(var.Manufacturer)"
      Language="$(var.LanguageCode)"
    >
    <!--
      Describe a package, see https://wixtoolset.org/docs/v3/xsd/wix/package.
      Don't set InstallScope="perMachine" since it causes issues with finding
      installed products on x86.
    -->
    <Package
        Id="$(var.PackageCode)"
        InstallerVersion="500"
        Description="$(var.InstallerDescription)"
        Compressed="yes"
        Keywords="Installer"
        Manufacturer="$(var.Manufacturer)"
        Languages="$(var.LanguageCode)"
    />

    <!--
      TODO(e.burkov):  Add upgrade.
    -->

    <!--
      Describe the disk, see https://wixtoolset.org/docs/v3/xsd/wix/media.
    -->
    <Media
        Id="1"
        Cabinet="media1.cab"
        EmbedCab="yes"
    />

    <!--
      Detect and require admin privileges, see
      https://learn.microsoft.com/en-us/windows/win32/msi/msiuserealadmindetection.
    -->
    <Property
        Id="MSIUSEREALADMINDETECTION"
        Value="1"
    />

    <!--
      Don't check the running app since we handle it with custom actions anyway,
      see https://learn.microsoft.com/en-us/windows/win32/msi/msirestartmanagercontrol.
    -->
    <Property
        Id="MSIRESTARTMANAGERCONTROL"
        Value="Disable"
    />

    <!--
      Describe the installed resources layout, see
      https://wixtoolset.org/docs/v3/xsd/wix/directory.
    -->
    <Directory
        Id="TARGETDIR"
        Name="SourceDir"
      >
      <Directory
          Id="$(var.PlatformProgramFilesFolder)"
          Name="PFiles"
        >
        <Directory
            Id="INSTALLDIR"
            Name="AdGuard DNS Client"
          >
          <Component
              Id="MainExecutable"
              Guid="$(var.ExecutableGUID)"
              Win64="$(var.ComponentWin64)"
            >
            <File
                Id="AdGuardDNSClient"
                Name="AdGuardDNSClient.exe"
                DiskId="1"
                Source="$(var.BuildOutput)"
                KeyPath="yes"
              >
              <!--
                TODO(e.burkov):  Add shortcuts.
              -->
            </File
            >
          </Component
          >
        </Directory
        >
      </Directory
      >
    </Directory
    >
    <!--
      Describe the installed units, see
      https://wixtoolset.org/docs/v3/xsd/wix/feature.
    -->
    <Feature
        Id="Complete"
        Title="Complete Install"
        Level="1"
      >
      <ComponentRef
          Id="MainExecutable"
      />
    </Feature
    >

    <!--
      Add custom actions for installing/uninstalling and starting/stopping the
      service.

      See https://wixtoolset.org/docs/schema/wxs/customaction.
    -->

    <CustomAction
        Id="InstallSvc"
        Impersonate="no"
        FileKey="AdGuardDNSClient"
        ExeCommand="-s install"
        Execute="deferred"
        Return="check"
    />
    <CustomAction
        Id="RollbackInstallSvc"
        Impersonate="no"
        FileKey="AdGuardDNSClient"
        ExeCommand="-s uninstall"
        Execute="rollback"
        Return="check"
    />
    <CustomAction
        Id="UninstallSvc"
        Impersonate="no"
        FileKey="AdGuardDNSClient"
        ExeCommand="-s uninstall"
        Execute="deferred"
        Return="ignore"
    />

    <CustomAction
        Id="StartSvc"
        Impersonate="no"
        FileKey="AdGuardDNSClient"
        ExeCommand="-s start"
        Execute="deferred"
        Return="check"
    />
    <CustomAction
        Id="StopSvc"
        Impersonate="no"
        FileKey="AdGuardDNSClient"
        ExeCommand="-s stop"
        Execute="deferred"
        Return="ignore"
    />

    <!--
      Define the actions order, see
      https://wixtoolset.org/docs/v3/xsd/wix/installexecutesequence.
    -->
    <InstallExecuteSequence
      >
      <!--
        Stop the Windows service before uninstalling the service.
      -->
      <Custom
          Action="StopSvc"
          After="ProcessComponents"
          Before="UnpublishFeatures"
        >
        REMOVE~="ALL"
      </Custom
      >
      <!--
        Uninstall the Windows service before removing the executable.
      -->
      <Custom
          Action="UninstallSvc"
          After="StopSvc"
        >
        REMOVE~="ALL"
      </Custom
      >
      <!--
        Run the installed executable to install as Windows service.
      -->
      <Custom
          Action="InstallSvc"
          After="PublishProduct"
        >
        NOT Installed
      </Custom
      >
      <!--
        Rollback the installed service in case it can't start.
      -->
      <Custom
          Action="RollbackInstallSvc"
          Before="InstallSvc"
        >
        NOT Installed
      </Custom
      >
      <!--
        Start the installed Windows service.
      -->
      <Custom
          Action="StartSvc"
          After="InstallSvc"
        >
        NOT Installed
      </Custom
      >
    </InstallExecuteSequence
    >

    <!--
      TODO(e.burkov):  Add UI with <UIRef Id="WixUI_Minimal"/>
    -->
  </Product
  >
</Wix
>
